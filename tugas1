const cekHariKerja = (day ) => {
    return new Promise((resolve, reject) =>{
        setTimeout(() =>{
            const dataDay = ['senin', 'selasa', 'rabu', 'kamis', 'jumat']
            let cek = dataDay.find((item) => {
                return item === day
            })
            if(cek){
                resolve(cek)
            }else{
                reject(new Error('hari ini bukan hari kerja'))
            }
        }, 3000)
    })

}




cekHariKerja('senin').then(day =>{   // then = untuk mendapatkan atau mengubah data ketika promise sukses
    console.log('hari ini hari',day, 'selamat bekerja')
}).catch((err) =>{     // untuk mendapatkan data error ketika promise gagal
    console.log(err.message)
})

async function cekTryCatch (){

try{  
    let result = await cekHariKerja('minggu')
    console.log(result)
}catch(err){
    console.log(err)
}

/* try catch untuk mengatasi error handling pada async/await 
try = blok kode untuk dijalankan / di uji
catch = blok kode yang akan di eksekusi apabila terjadi error 

*/

}

cekTryCatch()
